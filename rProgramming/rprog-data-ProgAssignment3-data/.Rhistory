cbind( subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j ), j )
cbind( subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j )
j <- "AK"
cbind( subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j )
library(plyr)
?plyr
install.packages("plyr")
rbind.fill(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
library(plyr)
rbind.fill(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )
rbind.fill(as.character(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )), j)
rbind.fill(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), as.character(j))
cbind.fill(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), as.character(j))
cbind.fill(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )
nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
cbind(NA, j)
j
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
num2
num2
numberRow <- subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )
numberRow
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
numberRow <- subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
numberRow
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
positionData
returnData <- rbind( returnData, positionData)
returnData
subset(returnData, select = c("hospital name", "State"))
returnData
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
returnData <- rbind( returnData, positionData)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
returnData
}
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
outcome <- "heart attack"
num <- 20
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
j <- "AL"
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
num2
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
numberRow
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
positionData
returnData <- rbind( returnData, positionData)
returnData
J <- "AK"
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
num2
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
nubmerRow
numberRow
nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" )
subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j )
j
subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j )
num2
j
J <- "AK"
j
j <- "AK"
j
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
numberRow
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
positionData
returnData <- rbind( returnData, positionData)
cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
names(returnData)
names(positoinData)
names(positionData)
j <- "AL"
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
rbind( returnData, positionData)
names(positionData)
colnames(positionData) <- c("hospital name", "State")
colnames(returnData) <- c("hospital name", "State")
rbind( returnData, positionData)
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital name", "State")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital name", "State")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
returnData
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital name", "State")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital name", "State")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
order(returnData[,2])
}
head(rankall("heart attack", 20), 10)
outcome <- "heart attack"
num <- 20
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital name", "State")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital name", "State")
}
returnData
order(returnData[, 2])
returnData[order(returnData[, 2]),]
order(returnData[, 2])
returnData[order(returnData[, 2]),]
returnData[order(returnData[2,]),]
returnData[order(returnData[,2]),]
returnData[order(returnData[,"State"]),]
returnData[order(returnData[,"2]),]
""
;
/
)
returnData[order(returnData[,2]),]
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital name", "State")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital name", "State")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
returnData[order(returnData[,2]),]
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
9
9
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital", "State")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital", "State")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
returnData[order(returnData[,2]),]
}
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
setwd("C:/Users/Carol e Le/Desktop/coursera/rProgramming/rprog-data-ProgAssignment3-data")
data_dir <- getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character", header = TRUE, na.strings="Not Available")
uniqueState <- unique( data[, "State"] )
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia") {
stop("invalid outcome")
}
subData <- (subset(x = data, select = c(2, 7, 11, 17, 23)))
colnames(subData)<- c("hospital name","State","heart attack","heart failure","pneumonia")
subData <- subset(subData, select = c("hospital name", "State", outcome))
subData <- na.omit(subData)
#dataState <- subData[which(subData$State == i),]
#orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedData <- data.frame()
## For each state, find the hospital of the given rank
for( i in uniqueState ){
dataState <- subData[which(subData$State == i),]
orderedState <- dataState[order(as.double(dataState[,3]),dataState[,1]),]
rankedState <- cbind(orderedState, c(1:nrow(x = orderedState)))
rankedData <- rbind(rankedData, rankedState)
}
colnames(rankedData)[4] <- "rank"
returnData <- data.frame()
for( j in uniqueState ){
if (num == "best"){
num2 <- 1
} else if (num == "worst"){
num2 <- nrow(rankedData[which(rankedData$State == j),])
}else{
num2 <- num
}
#positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
numberRow <- nrow(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ))
if( numberRow == 0 ){
positionData <- cbind(NA, j)
}else{
positionData <- cbind(subset( rankedData, rankedData[, "rank"] == num2 & rankedData[, "State"] == j, select = "hospital name" ), j)
}
colnames(positionData) <- c("hospital", "state")
returnData <- rbind( returnData, positionData)
colnames(returnData) <- c("hospital", "state")
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
returnData[order(returnData[,2]),]
}
submit()
submit()
submit()
